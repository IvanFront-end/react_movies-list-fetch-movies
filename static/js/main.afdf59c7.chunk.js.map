{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","href","imdbID","MoviesList","movies","map","FindMovie","addMovie","useState","title","setTitle","setMovie","error","setError","loading","setLoading","handleNewMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","movieFromServer","htmlFor","type","id","placeholder","classNames","value","onChange","e","target","disabled","length","onClick","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afdf59c7.chunk.js","sourcesContent":["import React from 'react';\n// import { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movie: MovieData;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {movie.Title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.Plot}\n          <br />\n          <a href={movie.imdbID} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n// import { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: MovieData[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbID} movie={movie} />\n    ))}\n  </div>\n);\n","import { FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie: (movie: MovieData | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleNewMovie = async (event: FormEvent) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const movieFromServer = await getMovie(title);\n\n    if ('imdbID' in movieFromServer) {\n      setMovie(movieFromServer);\n      setError(false);\n    } else {\n      setError(true);\n      setMovie(null);\n    }\n\n    setLoading(false);\n    setTitle('');\n  };\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setError(false);\n  };\n\n  const addMovieHandler = () => {\n    addMovie(movie);\n    setError(false);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'input is-danger': error,\n              })}\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!title.length}\n              onClick={handleNewMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieHandler}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=1dee830b&';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MovieData } from './types/MovieData';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<MovieData[]>([]);\n\n  const addMovie = (newMovie: MovieData | null) => {\n    if (newMovie && !movies.find((movie) => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}